openapi: 3.0.3
info:
    title: Swagger IU5 Networking Template - OpenAPI 3.0
    license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html
    version: 1.0.11
externalDocs:
    description: Find out more about Swagger
    url: http://swagger.io
tags:
    - name: chat
      description: Everything about your Chats
    - name: message
      description: Everything about your Messages
paths:
    /chat:
        get:
            tags:
                - chat
            description: Returns a chats
            operationId: getChats
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Chat'
        put:
            tags:
                - chat
            operationId: updateChat
            requestBody:
                description: Update an existent chat
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateChat'
                required: true
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Chat'
                '400':
                    description: Invalid ID supplied
                '404':
                    description: Chat not found
                '405':
                    description: Validation exception
        post:
            tags:
                - chat
            description: Add a new chat
            operationId: addChat
            requestBody:
                description: Create a new chat
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateChat'
                required: true
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Chat'
                '405':
                    description: Invalid input
    /chat/{chatId}:
        get:
            tags:
                - chat
            description: Returns a single chat
            operationId: getChatById
            parameters:
                - name: chatId
                  in: path
                  description: ID of chat to return
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Chat'
                '400':
                    description: Invalid ID supplied
                '404':
                    description: Chat not found
        delete:
            tags:
                - chat
            description: delete a chat
            operationId: deleteChat
            parameters:
                - name: chatId
                  in: path
                  description: Chat id to delete
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                '400':
                    description: Invalid chat value
    /chat/{chatId}/message:
        get:
            tags:
                - message
            description: get messages for chat
            operationId: getMessagesByChat
            parameters:
                - name: chatId
                  in: path
                  description: chat id
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Message'
        post:
            tags:
                - message
            description: post messages for chat
            operationId: addMessageInChat
            parameters:
                - name: chatId
                  in: path
                  description: chat id
                  required: true
                  schema:
                      type: integer
                      format: int64
            requestBody:
                description: Create a new message
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateMessage'
                required: true
            responses:
                '200':
                    description: successful operation
components:
    schemas:
        CreateChat:
            required:
                - name
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 10
                name:
                    type: string
                    example: Vlad
                avatar:
                    type: string
                    example: avatarUrl
        Chat:
            required:
                - id
                - name
                - avatar
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 10
                name:
                    type: string
                    example: Vlad
                avatar:
                    type: string
                    example: avatarUrl
        Message:
            required:
                - id
                - content
                - from
                - to
                - fromId
                - toId
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 10
                content:
                    type: string
                    example: Message text
                from:
                    $ref: '#/components/schemas/User'
                to:
                    $ref: '#/components/schemas/User'
                fromId:
                    type: integer
                toId:
                    type: integer
        CreateMessage:
            required:
                - content
                - fromId
                - toId
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 10
                content:
                    type: string
                    example: Message text
                from:
                    $ref: '#/components/schemas/User'
                to:
                    $ref: '#/components/schemas/User'
                fromId:
                    type: integer
                toId:
                    type: integer
        User:
            required:
                - id
                - username
                - avatar
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                username:
                    type: string
                avatar:
                    type: string
        ApiResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                type:
                    type: string
                message:
                    type: string
            xml:
                name: '##default'
